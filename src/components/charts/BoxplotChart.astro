---
import ChartLayout from "../../layouts/ChartLayout.astro";
---

<ChartLayout title="Tarifas entre supervivientes">
  <div class="w-[350px] h-[350px] mx-auto">
    <svg class="boxplot-chart h-[300px] w-full overflow-visible" viewBox="0 0 300 300"></svg>
  </div>
</ChartLayout>

<script>
  import * as d3 from "d3";
  import { DATA } from "../../constants";

  const dataByPort = d3.group(DATA, (v) => v.Embarked);
  const svg = d3.select(".boxplot-chart");

  const maxFare: number = d3.max(DATA, (d) => +d.Fare)!;

  const southamptonData: any[] = dataByPort.get("S")!;
  const cherburgData: any[] = dataByPort.get("C")!;
  const queenstownData: any[] = dataByPort.get("Q")!;

  const startX = 75;
  const boxWidth = 100;

  let offsetX = 0;

  const lineColor = "#8E8E8E";

  drawBoxPlot(southamptonData);
  drawBoxPlot(cherburgData);
  drawBoxPlot(queenstownData);

  function drawBoxPlot(d: any[]) {
    const data = d
      .map((d) => +d.Fare)
      .filter((d) => d !== 0)
      .sort((a, b) => +a - +b);
    const q1 = d3.quantile(data, 0.25)!;
    const q3 = d3.quantile(data, 0.75)!;
    const median = d3.quantile(data, 0.5)!;
    const iqr = q3 - q1;
    const min = Math.max(q1 - 1.5 * iqr, data[0]);
    const max = q3 + 1.5 * iqr;
    const outliers = data.filter((d) => d < min || d > max);

    const scaleY = d3
      .scaleLinear()
      .domain([0, maxFare + 100])
      .range([300, 0]);

    // @ts-ignore
    svg.call(d3.axisLeft(scaleY));

    // Main vertical line
    svg
      .append("line")
      .attr("x1", startX + offsetX)
      .attr("x2", startX + offsetX)
      .attr("y1", scaleY(min))
      .attr("y2", scaleY(max))
      .attr("stroke-width", "2px")
      .attr("stroke", lineColor);
      
      // Box
      svg
      .append("rect")
      .attr("x", startX - boxWidth / 2 + offsetX)
      .attr("y", scaleY(q3))
      .attr("width", boxWidth)
      .attr("height", scaleY(q1) - scaleY(q3))
      .attr("fill", "var(--color-chart-primary)");
      
      // Horizontal lines
      svg
      .selectAll("toto")
      .data([min, median, max])
      .enter()
      .append("line")
      .attr("x1", startX - boxWidth / 2 + offsetX)
      .attr("x2", startX + boxWidth / 2 + offsetX)
      .attr("y1", (d) => scaleY(d))
      .attr("y2", (d) => scaleY(d))
      .attr("stroke-width", "2px")
      .attr("stroke", lineColor);

    // Outliers
    svg
      .selectAll("outliers")
      .data(outliers)
      .enter()
      .append("circle")
      .attr("class", "outlier")
      .attr("cx", (d) => startX + offsetX)
      .attr("cy", (d) => scaleY(d))
      .attr("r", 3)
      .attr("fill", lineColor);

    offsetX += boxWidth + 30;

    d3.select(".domain").attr("stroke", lineColor);
    d3.selectAll(".tick line").attr("stroke", lineColor);
    d3.selectAll(".tick text").attr("fill", lineColor).style("font-size", "14px").attr("x", -15);
  }
</script>
